(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{185:function(t,e,a){"use strict";a.r(e);var s=a(0),n=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"css盒子模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css盒子模型","aria-hidden":"true"}},[t._v("#")]),t._v(" css盒子模型")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("盒子模型是css中核心的基础知识，只有掌握了盒子模型才能更好的进行页面布局。我们可以将页面的每个元素看成一个矩形盒子，每个盒子中心有一个内容区，\n内容区周围有可选的内边距，外边距和边框，如下图所示：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/boxModel.png",alt:"boxModel"}})]),t._v(" "),a("p",[t._v("为了更好的理解盒子模型我们先来看几个基本概念：")]),t._v(" "),a("h3",{attrs:{id:"_1-css内边距："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-css内边距：","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.css内边距：")]),t._v(" "),a("p",[t._v("元素的内边距在边框和内容之间。控制该区域的属性是"),a("strong",[t._v("padding")]),t._v("属性。")]),t._v(" "),a("p",[a("strong",[t._v("padding属性可以为具体长度值，也可以为百分比值(相对于父元素的width计算)，但不能使用负值。")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("属性")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("padding-top")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("设置元素的上内边距")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("padding-bottom")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("设置元素的下内边距")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("padding-left")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("设置元素的左内边距")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("padding-right")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("设置元素的右内边距")])])])]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 默认为上，右，下，左内边距 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("h1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("padding")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 10px 0.5em 20ex 50%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-css边框："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-css边框：","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.css边框：")]),t._v(" "),a("p",[t._v("元素的边框(border)是围绕元素内容和内边距的一条或多条线。")]),t._v(" "),a("p",[t._v("我们可以设置元素边框的样式，颜色和宽度。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("属性")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("border-style")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("设置元素所有边框样式，或分别设置各边边框样式")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("border-color")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("设置元素所有边框颜色，或分别设置各边边框颜色")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("border-width")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("设置元素所有边框宽度，或分别设置各边边框宽度")])])])]),t._v(" "),a("h3",{attrs:{id:"_3-css外边距："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-css外边距：","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.css外边距：")]),t._v(" "),a("p",[t._v("元素的外边距(margin)是围绕在元素边框外的空白区域，设置外边距会在元素外创建额外的空白。\n"),a("strong",[t._v("margin属性可以为具体长度值，也可以为百分比值(相对于父元素的width计算)和负数。")])]),t._v(" "),a("p",[t._v("理解了内边距(padding),边框(border),外边距(margin)，上图所示的盒模型应该很好理解了。当两个垂直外边距相遇时，它们将形成一个外边距，\n这就是我们接下来要说的css外边距合并。")]),t._v(" "),a("h3",{attrs:{id:"_4-css外边距合并："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-css外边距合并：","aria-hidden":"true"}},[t._v("#")]),t._v(" 4.css外边距合并：")]),t._v(" "),a("p",[t._v("两个垂直外边距相遇时，将合并成一个外边距，合并后的外边距取发生合并的外边距较大者。如下图所示：\n"),a("img",{attrs:{src:"/img/boxModel1.png",alt:"外边距合并1"}}),t._v(" "),a("img",{attrs:{src:"/img/boxModel2.png",alt:"外边距合并2"}})]),t._v(" "),a("p",[a("strong",[t._v("只有普通文档流中块框的垂直外边距才会发生外边距合并。行内框、浮动框或绝对定位之间的外边距不会合并。")])]),t._v(" "),a("p",[t._v("相信看到这里我们已经初步掌握了css盒子模型，接下来我们再看不同标准的两种盒子模型：")]),t._v(" "),a("h3",{attrs:{id:"_5-两种盒模型："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-两种盒模型：","aria-hidden":"true"}},[t._v("#")]),t._v(" 5.两种盒模型：")]),t._v(" "),a("p",[t._v("这里的两种盒模型是指W3C盒模型(标准盒模型)和IE盒模型(怪异盒模型)。这两种盒模型的区别主要在元素的width和height属性上。")]),t._v(" "),a("p",[t._v("如下图，为W3C盒模型(标准盒模型)，盒子模型范围包括margin，border，padding，content，并且content部分不包含其他部分。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/boxModel3.png",alt:"标准盒模型"}})]),t._v(" "),a("p",[t._v("如下图，为IE盒模型(怪异盒模型)，盒子模型范围包括margin，border，padding，content，"),a("strong",[t._v("IE盒子模型的content部分包含了padding和border")]),t._v("。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/boxModel4.png",alt:"怪异盒模型"}})]),t._v(" "),a("h3",{attrs:{id:"_6-css3属性box-sizing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-css3属性box-sizing","aria-hidden":"true"}},[t._v("#")]),t._v(" 6.CSS3属性box-sizing:")]),t._v(" "),a("p",[t._v("既然知道了盒子模型有标准和怪异两种，那么我们怎么通过css来设置两种盒模型？这里就要用到css3的box-sizing属性。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* W3C盒模型 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("box-sizing")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("content-box"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* IE盒模型 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("box-sizing")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("border-box"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("值")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("content-box")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("这是由 CSS2.1 规定的宽度高度行为。宽度和高度分别应用到元素的内容框。在宽度和高度之外绘制元素的内边距和边框。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("border-box")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("为元素设定的宽度和高度决定了元素的边框盒。就是说，为元素指定的任何内边距和边框都将在已设定的宽度和高度内进行绘制。通过从已设定的宽度和高度分别减去边框和内边距才能得到内容的宽度和高度。")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("2019/3/16 18:29")])])])}],!1,null,null,null);e.default=n.exports}}]);